'''
人口普查：
人口普查是一项重要的国情调查，对于国家管理、制定各项方针政策具有重要的意义，中国最早的一次人口普查在西汉汉平帝元始二年进行，而自中华人民共和国建国以来分别在1953、城乡人口、人口流动性等八方面。关于《各地区分性别、孩次的出生人口（2009.11.-2010.10.31）》的数据如链接（http://www.stats.gov.cn/tjsj/pcsj/rkpc/6rp/indexch.htm）所示（第六卷6-1）、1964、1982、1990、2000和2010年进行了共六次人口普查，其中第六次人口普查分别涉及到了人口增长、家庭户人口、性别构成、年龄构成、民族构成、受教育程度，请利用Python代码完成如下问题：
a)	以各省市数据为代表，求取中国出生人口的性别比的均值的置信区间（置信水平90%，假设出生人口性别比不符合正态分布）
b)	以各省市数据为代表，为了探索是否存在“重男轻女”现象，现在要求求取第一孩和非第一孩的出生人口的性别比的均值差的范围（非第一孩减第一孩，置信水平90%，假设第一胎与非第一胎是独立的，第一胎与非第一胎出生人口性别比均不符合正态分布）
帮助：
	1. 关于数据处理，可以自行将数据保存为csv文件，上传至慕测在线做题项目空间。(problem目录下)
	操作步骤：
	文件->新建文件
	2. 必须要有文件IO操作，不能直接在本地计算

数据输入格式：
	本题没有数据输入；

数据返回格式示例：
	[[interval_a_1, interval_a_2], [interval_b_1], [interval_b_2]]
'''

#-*- coding:utf-8 -*-
import pandas as pd
from scipy import stats
import numpy as np
class Solution:
    def solve(self):
        aList=[112.15,114.59,118.71,113.07,108.87,112.91,115.67,115.1,111.49,121.38,118.36,131.07,125.71,128.27,124.28,127.64,123.94,125.78,129.49,122,129.43,113.8,112.98,126.2,113.61,100.08,116.1,124.79,112.69,114.36,105.56]
        aList=np.array(aList)
        size=len(aList)
        mean=aList.mean()
        a_1=mean-(aList.std()/size**0.5)*stats.norm.isf(0.05)
        a_2=mean+(aList.std()/size**0.5)*stats.norm.isf(0.05)
        boy_total=[6879,4572,41736,15617,10387,12519,8328,11200,8598,34825,24654,31594,19173,25679,46753,51936,29647,36869,53596,30889,5805,10333,31499,20685,26023,1284,16265,13717,3143,3648,14220]
        girl_total=[6134,3990,35157,13812,9541,11088,7200,9731,7712,28690,20829,24104,15252,20019,37620,40690,23921,29313,41389,25318,4485,9080,27881,16391,22906,1283,14009,10992,2789,3190,13471]
        boy_fst=[5739,3418,23654,9455,7140,9590,6298,8951,6687,23157,15543,19417,12114,11968,30616,27263,19467,20923,31282,16506,2947,6419,19224,11080,14577,598,10590,7792,1661,1966,7648]
        girl_fst=[5348,3058,21704,8404,6653,8679,5408,7730,6288,20176,14168,17182,10749,10508,27000,23094,16927,17462,25579,14402,2514,5736,16912,10129,13388,555,9255,6595,1540,1833,7200]
        bList_1=[107.31,111.77,108.98,112.51,107.32,110.50,116.46,115.80,106.35,114.77,109.70,113.01,112.70,113.89,113.39,118.05,115.01,119.82,122.30,114.61,117.22,111.91,113.67,109.39,108.88,107.75,114.42,118.15,107.86,107.26,106.22]
        bList_2=[100.0*(boy_total[i]-boy_fst[i])/(girl_total[i]-girl_fst[i])for i in range(len(boy_total))]
        para=(np.array(bList_1).var()/size+np.array(bList_2).var()/size)**0.5*stats.norm.isf(0.05)
        diff=np.array(bList_2).mean()-np.array(bList_1).mean()
        return [[a_1,a_2],[diff-para,diff+para]]
        pass